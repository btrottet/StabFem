//verbosity = 0;
real R = 1,Rbase=1;
real Rpin,Lsurf;
int d;
int typegeom;


cout << "Construction du Maillage initial 'guess' " << endl << endl; 


cout << " Type de geometrie : PORTION DE SPHERE" << endl;
//cin >> typegeom;
typegeom = 1;

//cout << " ENTREZ Le rayon en pied de bulle ?" << endl;
//cin  >> Rpin;

//cout << " ENTREZ Le rayon de courbure ?" << endl;
//cin  >> Rcurve;

real LL = 1;
real Rdrop = 1;


cout << " ENTREZ La densite du maillage ?" << endl;
cin  >> d;


cout << "==> Longueur = " << LL << endl;
cout << "==> Densite = " << d << endl;




border Wall(t=0,Rbase){y=0;x=t;label=5;};
border Axe(t=Rdrop,0){y = t ; x = 0;label=1;};
//border Side2(t=R,0){y=LL ; x = t;label=5;};
mesh MeshInt;




//real Rc = sqrt((LL/2)^2+1);
//real thetac = atan(LL/2);
//Lsurf = 2*Rc*thetac;
//cout << " Portion de sphere : Rc = " << Rc << " ; thetac = " << thetac << " ; Lsurf = " << Lsurf << endl;
//border SurfBulle(t=-thetac,thetac){y=Rc*(sin(t)+sin(thetac));x=Rc*cos(t);label=2;};

border SurfDrop(t=0,pi/2){y=Rbase*sin(t);x=Rbase*cos(t);label=2;};

plot(SurfDrop(2*R*d)+Wall(R*d)+Axe(LL*d));
MeshInt = buildmesh(SurfDrop(2*R*d)+Wall(R*d)+Axe(R*d));



savemesh(MeshInt,"MeshBridge_guess.msh");


plot(MeshInt,wait=1);

savemesh(MeshInt,"mesh_guess.msh");




////////////////////////////////////////////////////////////////
//
// POST-TRAITEMENT : fichiers Infos_Geom.txt et Geom_Surface.txt
//
////////////////////////////////////////////////////////////////


// Construction de vecteurs contenant les points de la surface numerotes (cf. macro)  

//mesh Shempty=emptymesh(MeshInt); 	

/// TEST
mesh Shempty=MeshInt; 	




real K0, dpdz;
include "Macros_Geometrie_Surface.edp";
SurfaceNumbering(IndexPointSurf,xPointSurf,yPointSurf,S0PointSurf,Nsurface);
CalcGeomSurf;


// Calcul de diverses quantites interessantes
real Vol = 2*pi*int2d(MeshInt)(x); // Volume
real Area = 2*pi*int1d(MeshInt,2)(x); // Surface
real Rmax = xPointSurf(0:Nsurface).max;
real Rmin = xPointSurf(0:Nsurface).min;
real Zmax = yPointSurf(0:Nsurface).max;
real Zmin = yPointSurf(0:Nsurface).min;
real Z1 = yPointSurf(0);
real Z2 = yPointSurf(Nsurface);
real L = Z2-Z1;

dpdz = 0;

cout << " ####### STATISTIQUES sur la forme : " << endl << endl;
cout << " ## Longueur                        : " << L << endl;
cout << " ## gradient pression adim (Bo^-1)  : " << dpdz << endl;
cout << " ## Volume                          : " << Vol << endl;
cout << " ## Volume / Volume cyl             : " << Vol/(pi*L*Rbase^2) << endl;
cout << " ## Courbure                        : " << K0 << endl;
cout << " ## SURFACE                         : " << Area << endl;
cout << " ## Rmax                            : " << Rmax << endl;
cout << " ## Rmin                            : " << Rmin << endl;
cout << " ## Zmax                            : " << Zmax << endl;
cout << " ## Zmin                            : " << Zmin << endl;
cout << endl;


// fichier info geom
{
ofstream fileG("Infos_Geom.txt");
fileG.scientific;
fileG << L << " " ; 
fileG << Vol/(pi*L*Rbase^2) << " " ;
fileG << K0 << " " ; 
fileG << dpdz << " " ;
fileG << Area << " ";
fileG << Zmin << " " ; 
fileG << Zmax << " " ; 
fileG << Rmin << " " ; 
fileG << Rmax << " ";
fileG <<  endl ; 
fileG << "### Infos geometrie : L Vol' K0 dpdz Area Zmin Zmax Rmin Rmax" << endl;
};



// ##################  ECRITURE D'un fichier contenant la geometrie de la surface ############ 
ofstream filegeom2("Geom_SurfaceINIT.txt") ;
for(int ksurf=Nsurface;ksurf>-1;ksurf--) 
	{
	filegeom2 << S0PointSurf(ksurf) << "   " << xPointSurf(ksurf) << "  "  << yPointSurf(ksurf) << "   " 
	<< alphaPointSurf(ksurf) << "   " << K0aPointSurf(ksurf) << "  " << K0bPointSurf(ksurf)  
	<< "  " << dS0PointSurf(ksurf)  	<< endl ;
	};